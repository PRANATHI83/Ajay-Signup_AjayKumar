<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Forgot Password</title>

  <link rel="icon" type="image/x-icon" href="favicon.ico" />

  <link
    rel="stylesheet"
    href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"
  />
  <style>
    /* Keep your original styles here */
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #f0f2f5;
    }

    .container {
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 50px 20px;
    }

    .form-container {
      background: #fff;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 400px;
    }

    h2 {
      text-align: center;
      color: #0077ff;
      margin-bottom: 20px;
    }

    .input-container {
      position: relative;
      margin-bottom: 20px;
    }

    .input-container input {
      width: 100%;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
      font-size: 16px;
    }

    .input-container label {
      display: block;
      margin-bottom: 5px;
      color: #333;
    }

    .eye-icon, .info-icon {
      position: absolute;
      right: 10px;
      top: 38px;
      cursor: pointer;
    }

    .form-button {
      width: 100%;
      padding: 12px;
      background-color: #0077ff;
      color: white;
      border: none;
      border-radius: 6px;
      font-size: 16px;
      cursor: pointer;
    }

    .form-button:disabled {
      background-color: #aaa;
      cursor: not-allowed;
    }

    .checkmark {
      position: absolute;
      right: 10px;
      top: 10px;
      color: green;
      display: none;
    }

    .checkmark.invalid {
      color: red;
    }

    .error-message {
      font-size: 12px;
      color: red;
      margin-top: 4px;
    }

    .alert {
      position: fixed;
      top: 20px;
      right: 20px;
      padding: 10px 15px;
      border-radius: 5px;
      color: white;
      font-size: 14px;
      z-index: 1000;
      animation: fadeOut 3s forwards;
    }

    .alert.success {
      background-color: green;
    }

    .alert.error {
      background-color: red;
    }

    @keyframes fadeOut {
      0% { opacity: 1; }
      80% { opacity: 1; }
      100% { opacity: 0; display: none; }
    }

    .links {
      margin-top: 20px;
      text-align: center;
    }

    .links a {
      text-decoration: none;
      color: #0077ff;
    }

    .modal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      justify-content: center;
      align-items: center;
    }

    .modal-content {
      background: white;
      padding: 20px;
      border-radius: 10px;
      width: 300px;
    }

    .modal-content h3 {
      margin-top: 0;
    }

    .modal-content ul {
      padding-left: 20px;
    }

    .modal-content button {
      position: absolute;
      top: 10px;
      right: 15px;
      background: none;
      border: none;
      font-size: 18px;
      cursor: pointer;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="form-container">
      <h2>Forgot Password</h2>
      <form id="forgotPasswordForm">
        <div class="input-container">
          <label for="email">Email</label>
          <input type="email" id="email" placeholder=" " required />
          <span id="email-checkmark" class="checkmark">‚úì</span>
          <span id="email-cross" class="checkmark invalid">‚úó</span>
          <div id="email-error" class="error-message"></div>
        </div>

        <div class="input-container password-container">
          <label for="newPassword">New Password</label>
          <input type="password" id="newPassword" placeholder=" " required />
          <span class="eye-icon" onclick="togglePassword('newPassword')">üëÅÔ∏è</span>
          <span class="info-icon" onclick="toggleModal()">‚ÑπÔ∏è</span>
          <span id="new-password-checkmark" class="checkmark">‚úì</span>
          <div id="new-password-error" class="error-message"></div>
        </div>

        <div class="input-container password-container">
          <label for="confirmNewPassword">Confirm Password</label>
          <input type="password" id="confirmNewPassword" placeholder=" " required />
          <span class="eye-icon" onclick="togglePassword('confirmNewPassword')">üëÅÔ∏è</span>
          <span id="confirm-password-checkmark" class="checkmark">‚úì</span>
          <div id="confirm-password-error" class="error-message"></div>
        </div>

        <button type="submit" id="resetPasswordBtn" class="form-button" disabled>
          Reset Password
        </button>
      </form>

      <div class="links">
        <a href="http://65.2.166.147:8023/">Back to Login</a>
      </div>
    </div>
  </div>

  <div id="passwordModal" class="modal">
    <div class="modal-content">
      <button onclick="toggleModal()">√ó</button>
      <h3>Password Requirements</h3>
      <ul>
        <li>Minimum 8 characters</li>
        <li>At least one uppercase letter</li>
        <li>At least one number</li>
        <li>At least one special character (!@#$%^&*)</li>
      </ul>
    </div>
  </div>

  <script>
    let isEmailValid = false;
    let isNewPasswordValid = false;
    let isConfirmPasswordValid = false;

    function showAlert(type, message) {
      const alert = document.createElement("div");
      alert.className = `alert ${type}`;
      alert.innerHTML = `<i class="fas fa-${type === "success" ? "check-circle" : "exclamation-circle"}"></i> ${message}`;
      document.body.appendChild(alert);
      setTimeout(() => alert.remove(), 3000);
    }

    function togglePassword(id) {
      const input = document.getElementById(id);
      const icon = input.parentElement.querySelector(".eye-icon");
      input.type = input.type === "password" ? "text" : "password";
      icon.textContent = input.type === "password" ? "üëÅÔ∏è" : "üîì";
    }

    function toggleModal() {
      const modal = document.getElementById("passwordModal");
      modal.style.display = modal.style.display === "flex" ? "none" : "flex";
    }

    function updateResetButton() {
      document.getElementById("resetPasswordBtn").disabled = !(isEmailValid && isNewPasswordValid && isConfirmPasswordValid);
    }

    async function checkEmail(email) {
      const emailError = document.getElementById("email-error");
      const check = document.getElementById("email-checkmark");
      const cross = document.getElementById("email-cross");

      if (!email) {
        emailError.textContent = "";
        check.style.display = "none";
        cross.style.display = "none";
        isEmailValid = false;
        updateResetButton();
        return;
      }

      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(email)) {
        emailError.textContent = "Invalid email format";
        cross.style.display = "block";
        check.style.display = "none";
        isEmailValid = false;
        updateResetButton();
        return;
      }

      try {
        const res = await fetch("http://65.2.166.147:3011/check-email-data", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email })
        });
        const data = await res.json();
        if (data.exists) {
          check.style.display = "block";
          cross.style.display = "none";
          emailError.textContent = "";
          isEmailValid = true;
        } else {
          cross.style.display = "block";
          check.style.display = "none";
          emailError.textContent = "Email not found";
          isEmailValid = false;
        }
      } catch (err) {
        cross.style.display = "block";
        check.style.display = "none";
        emailError.textContent = "Server error";
        isEmailValid = false;
      }
      updateResetButton();
    }

    function validateNewPassword() {
      const pwd = document.getElementById("newPassword").value;
      const error = document.getElementById("new-password-error");
      const check = document.getElementById("new-password-checkmark");

      const regex = /^(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*]).{8,}$/;
      if (!pwd) {
        error.textContent = "Password required";
        check.style.display = "none";
        isNewPasswordValid = false;
      } else if (!regex.test(pwd)) {
        error.textContent = "Weak password";
        check.style.display = "none";
        isNewPasswordValid = false;
      } else {
        error.textContent = "";
        check.style.display = "block";
        isNewPasswordValid = true;
      }
      validateConfirmPassword();
      updateResetButton();
    }

    function validateConfirmPassword() {
      const pwd = document.getElementById("newPassword").value;
      const confirm = document.getElementById("confirmNewPassword").value;
      const error = document.getElementById("confirm-password-error");
      const check = document.getElementById("confirm-password-checkmark");

      if (pwd !== confirm || !confirm) {
        error.textContent = "Passwords do not match";
        check.style.display = "none";
        isConfirmPasswordValid = false;
      } else {
        error.textContent = "";
        check.style.display = "block";
        isConfirmPasswordValid = true;
      }
      updateResetButton();
    }

    document.getElementById("email").addEventListener("input", (e) => {
      const email = e.target.value.trim();
      document.getElementById("email-error").textContent = "";
      document.getElementById("email-checkmark").style.display = "none";
      document.getElementById("email-cross").style.display = "none";
      isEmailValid = false;
      if (email) checkEmail(email);
    });

    document.getElementById("newPassword").addEventListener("input", validateNewPassword);
    document.getElementById("confirmNewPassword").addEventListener("input", validateConfirmPassword);

    document.getElementById("forgotPasswordForm").addEventListener("submit", async (e) => {
      e.preventDefault();
      const email = document.getElementById("email").value;
      const newPassword = document.getElementById("newPassword").value;
      const confirmNewPassword = document.getElementById("confirmNewPassword").value;

      try {
        const res = await fetch("http://65.2.166.147:3011/api/forgot", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email, newPassword, confirmNewPassword })
        });
        const data = await res.json();
        if (data.message) {
          showAlert("success", data.message);
          setTimeout(() => {
            // ‚úÖ CHANGE MADE HERE: Redirecting to Login Page (8023)
            window.location.href = "http://65.2.166.147:8023/"; 
          }, 3000);
        } else {
          showAlert("error", data.error || "Failed to reset password");
        }
      } catch (err) {
        showAlert("error", "Error connecting to server");
      }
    });

    window.addEventListener("click", (e) => {
      const modal = document.getElementById("passwordModal");
      if (e.target === modal) {
        modal.style.display = "none";
      }
    });
  </script>
</body>
</html>